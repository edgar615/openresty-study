worker_processes  1;        #nginx worker 数量
error_log logs/error.log;   #指定错误日志文件路径
events {
    worker_connections 1024;
}

http {
    server {
        #监听端口，若你的6699端口已经被占用，则需要修改
        listen 6699;
        # curl -i -X POST --url 'localhost:6699/print_param?a=1&b=2' --data 'c=3' --data 'd=4'
        location /print_param {
            content_by_lua_block {
                local args = ngx.req.get_uri_args()
                for k, v in pairs(args) do
                    ngx.say("[GET ] key:", k, " v:", v)
                end

                -- 解析 body 参数之前一定要先读取 body
                ngx.req.read_body()
                local body_args = ngx.req.get_post_args()
                for k, v in pairs(body_args) do
                    ngx.say("[POST] key:", k, " v:", v)
                end
            }
        }
        #传递请求 uri 参数
        #传递请求 uri 参数，URI 内容传递过程中是需要调用 ngx.encode_args 进行规则转义
        #curl -i -X GET --url 'localhost:6699/test'
        location /test {
            content_by_lua_block {
                local res = ngx.location.capture(
                    "/print_param",
                    {
                       method = ngx.HTTP_POST,
                       args = ngx.encode_args({a = 1, b = '2&'}),
                       body = ngx.encode_args({c = 3, d = '4&'})
                   }
                )
                ngx.say(res.body)
            }
        }
        #不做转义
        location /test2 {
            content_by_lua_block {
                local res = ngx.location.capture(
                    "/print_param",
                    {
                       method = ngx.HTTP_POST,
                       args = {a = 1, b = '2&'}, -- 可以用string 'a=1&b=2%26'
                       body = 'c=3&d=4%26'
                   }
                )
                ngx.say(res.body)
            }
        }
    }
}