worker_processes  1;        #nginx worker 数量
error_log logs/error.log;   #指定错误日志文件路径
events {
    worker_connections 1024;
}

http {
    server {
        #监听端口，若你的6699端口已经被占用，则需要修改
        listen 6699;

        # 默认读取 body
        lua_need_request_body on;

        #对于 HTTP 响应体的输出，在 OpenResty 中调用 ngx.say 或 ngx.print 即可
        #两者都是输出响应体，区别是 ngx.say 会对输出响应体多输出一个 \n
        #ngx.say 与 ngx.print 均为异步输出
        location /test {
            content_by_lua_block {
                ngx.say("hello")
                ngx.sleep(3)
                ngx.say(" the world")
            }
        }
        location /test2 {
            content_by_lua_block {
                ngx.say("hello")
                ngx.flush()
                ngx.sleep(3)
                ngx.say(" the world")
            }
        }
        location /test3 {
            content_by_lua_block {
                ngx.say(string.rep("hello", 1000))
                ngx.sleep(3)
                ngx.say(" the world")
            }
        }
        location /test4 {
            content_by_lua_block {
                local table = {
                     "hello, ",
                     {"world: ", true, " or ", false,
                         {": ", nil}}
                 }
                ngx.say(table) -- hello, world: true or false: nil
            }
        }
        location /test5 {
            content_by_lua_block {
                local table = {
                     "hello, ",
                     {"world: ", true, " or ", false,
                         {": ", nil}}
                 }
                ngx.print(table) --hello, world: true or false: nil
            }
        }
        location /test6 {
            content_by_lua_block {
                -- ngx.var.limit_rate = 1024*1024
                local file, err = io.open(ngx.config.prefix() .. "data.db","r")
                if not file then
                    ngx.log(ngx.ERR, "open file error:", err)
                    ngx.exit(ngx.HTTP_SERVICE_UNAVAILABLE)
                end

                local data
                while true do
                    data = file:read(1024)
                    if nil == data then
                        break
                    end
                    ngx.print(data)
                    ngx.flush(true)
                end
                file:close()
            }
        }
    }
}