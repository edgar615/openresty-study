worker_processes  1;        #nginx worker 数量
error_log logs/error.log error;   #日志级别
events {
    worker_connections 1024;
}

http {
    server {
        listen 6699;

         location / {
             content_by_lua_block {

                  --Returns current date (in the format yyyy-mm-dd) from the nginx cached time
                  ngx.say(ngx.today()) --2016-09-11
                  --Returns the elapsed seconds from the epoch for the current time stamp from the nginx cached time
                  ngx.say(ngx.time()) --1473568533
                  --Returns a floating-point number for the elapsed time in seconds (including milliseconds as the decimal part) from the epoch for the current time stamp from the nginx cached time
                  ngx.say(ngx.now()) --1473568533.632

                  --Forcibly updates the Nginx current time cache. This call involves a syscall and thus has some overhead, so do not abuse it.
                  ngx.say(ngx.update_time()) --2016-09-11 12:35:33

                  --Returns the current time stamp (in the format yyyy-mm-dd hh:mm:ss) of the nginx cached time
                  ngx.say(ngx.localtime())

                  --Returns the current time stamp (in the format yyyy-mm-dd hh:mm:ss) of the nginx cached time
                  ngx.say(ngx.utctime()) --2016-09-11 04:35:33

                  --Returns a formatted string can be used as the cookie expiration time. The parameter sec is the time stamp in seconds (like those returned from ngx.time).
                  ngx.say(ngx.cookie_time(1290079655)) --Thu, 18-Nov-10 11:27:35 GMT

                  --Returns a formated string can be used as the http header time (for example, being used in Last-Modified header). The parameter sec is the time stamp in seconds
                   ngx.say(ngx.http_time(1290079655)) --Thu, 18 Nov 2010 11:27:35 GMT

                   --Parse the http time string (as returned by ngx.http_time) into seconds. Returns the seconds or nil if the input string is in bad forms.
                   local time = ngx.parse_http_time("Thu, 18 Nov 2010 11:27:35 GMT")
                   ngx.say(time) --1290079655
             }
         }
    }
}