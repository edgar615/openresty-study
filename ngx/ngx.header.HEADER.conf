worker_processes  1;        #nginx worker 数量
error_log logs/error.log error;   #日志级别
events {
    worker_connections 1024;
}

http {
    server {
        listen 6699;

         location / {
            header_filter_by_lua '
                     if ngx.header["X-My-Header"] == "blah" then
                         ngx.var.footer = "some value"
                     end
                 ';
             content_by_lua_block {
                 --Set, add to, or clear the current request's HEADER response header that is to be sent.
                 --Underscores (_) in the header names will be replaced by hyphens (-) by default. This transformation can be turned off via the lua_transform_underscores_in_response_headers directive.
                 -- equivalent to ngx.header["Content-Type"] = 'text/plain'
                ngx.header.content_type="text/plain"
                ngx.header["X-My-Header"] = 'blah blah';
                --multi
                ngx.header['Set-Cookie'] = {'a=32; path=/', 'b=4; path=/'}

                --remove
                ngx.header["X-My-Header"] = nil;
                ngx.header["X-My-Header"] = {};
                --Setting ngx.header.HEADER after sending out response headers (either explicitly with ngx.send_headers or implicitly with ngx.print and similar) will throw out a Lua exception.

                --Note that ngx.header is not a normal Lua table and as such, it is not possible to iterate through it using the Lua ipairs function.

                --For reading request headers, use the ngx.req.get_headers function instead.
                ngx.say("hello")
             }
         }
    }
}