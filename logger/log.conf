worker_processes  1;        #nginx worker 数量
error_log logs/error.log error;   #日志级别
events {
    worker_connections 1024;
}

http {
    server {
        #监听端口，若你的6699端口已经被占用，则需要修改
        listen 6699;

        #ngx.STDERR     -- 标准输出
        #ngx.EMERG      -- 紧急报错
        #ngx.ALERT      -- 报警
        #ngx.CRIT       -- 严重，系统故障，触发运维告警系统
        #ngx.ERR        -- 错误，业务不可恢复性错误
        #ngx.WARN       -- 告警，业务中可忽略错误
        #ngx.NOTICE     -- 提醒，业务比较重要信息
        #ngx.INFO       -- 信息，业务琐碎日志信息，包含不同情况判断等
        #ngx.DEBUG      -- 调试

        #lua-resty-logger-socket 的目标是替代 Nginx 标准的 ngx_http_log_module 以非阻塞 IO 方式推送 access log 到远程服务器上。
        #对远程服务器的要求是支持 syslog-ng 的日志服务。

        location / {
            content_by_lua_block {
                local num = 55
                local str = "string"
                local obj
                ngx.log(ngx.ERR, "num:", num)
                ngx.log(ngx.INFO, " string:", str)
                print([[i am print]]) -- info级别
                ngx.log(ngx.ERR, " object:", obj)
            }
        }
    }
}